syntax = "proto3";

package hiit;

option go_package = "hiit/";

message Empty{}


message Data {
  string state = 1;
  int32 count = 2;
  string interval = 3;
}

message DataSession {
  Data data = 1;
  Session session = 2;
}

message RoutineChange {
  string routine = 1;
}

message Session {
  string id = 1;
  string exercise = 2;
}

message WorkoutUser {
  string id = 1;
  string name = 2;
  string email = 3;
  int32 score = 4;
}

message CreateWaitingRoomRequest {
  WorkoutUser host = 1;
  string workout = 2;
}

message WaitingRoomRequest {
  WorkoutUser user = 1;
  string workout = 2;
}

message WaitingRoomResponse {
  WorkoutUser host = 1;
  repeated WorkoutUser users = 2;
  bool start = 3;
}

message InviteWaitingRoomRequest {
  WorkoutUser from = 1;
  WorkoutUser to = 2;
  string workout = 3;
}

message StartWaitingRoomRequest {
  WorkoutUser host = 1;
  string workout = 3;
}

message CreateDuoHIITRequest {
  WorkoutUser host  = 1;
  string hiit = 2;
}

message JoinDuoHIITRequest {
  WorkoutUser user = 1;
  string hiit = 2;
}

message HIITActivity {
  enum Type {
    UNKNOWN = 0;
    ROUTINE_CHANGE = 1;
    INTERVAL_COMPLETE = 2;
    WINNER = 3;
  }
  string hiit = 1;
  WorkoutUser user = 2;
  HIITRoutine routine = 3;
  Type type = 4;
  WorkoutUser winner = 5;
}

message HIITRoutineInterval {
  string id = 1;
}

message HIITRoutine {
  string id = 1;
  string exercise = 2;
  HIITRoutineInterval interval = 3;
}


message HIITRequest {
  string hiit = 1;
  WorkoutUser user = 2;
  HIITRoutine routine = 3;
}


service HIITService {
  rpc Sub(RoutineChange) returns (stream Data);
  rpc Pub(DataSession) returns (Empty);
  rpc CreateWaitingRoom(CreateWaitingRoomRequest) returns (stream WaitingRoomResponse);
  rpc JoinWaitingRoom(WaitingRoomRequest) returns (stream WaitingRoomResponse);
  rpc StartWaitingRoom(StartWaitingRoomRequest) returns (Empty);

  rpc NotifyInvites(InviteWaitingRoomRequest) returns (Empty);
  rpc SubInvites(WorkoutUser) returns (stream InviteWaitingRoomRequest);

  rpc CreateDuoHIIT(CreateDuoHIITRequest) returns (stream HIITActivity);
  rpc JoinDuoHIIT(JoinDuoHIITRequest) returns (stream HIITActivity);

  rpc HIITIntervalComplete(HIITRequest) returns (Empty);

  rpc HIITRoutineComplete(HIITRequest) returns (Empty);

  rpc DuoHIITSelectRoutine(HIITRequest) returns (Empty);
}
